version: "3.9"

services:
  db:
    image: postgres:alpine
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./.docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./.docker/postgres/certs/cert.pem:/var/lib/postgresql/cert.pem:ro
      - ./.docker/postgres/certs/key.pem:/var/lib/postgresql/key.pem:ro
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
  migrate:
    build:
      context: .
      target: deps
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    command: >
      sh -c "npx prisma generate &&
             npx prisma migrate deploy"
    restart: "no"

  web:
    build:
      context: .
    environment:
      NODE_ENV: production
    env_file: .env
    ports:
      - "80:3000"
    depends_on:
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped

volumes:
  pgdata:
